Project Title : Dog v/s Cat classifier

Introduction :  
This project aims to classify the input image as either a dog or a cat image. The image input which you give to the system will be analyzed and the predicted result will be given as output. Machine learning algorithm [Convolutional Neural Networks] is used to classify the image.


Project divided into different parts or stages :

1.Preprocessing :
We've got the data, but we can't exactly just stuff raw images right 	through our convolutional neural network. First, we need all of the images to be the same size, and then we also will probably want to just grayscale them. Also, the labels of "cat" and "dog" are not useful, we want them to be one-hot arrays.
  (a).def  get_label(): used to encoding the data in 0 and 1.
  (b).def get_training_data(): 
	Returns the training data from TRAIN_DIR.
    	Images are read in grayscale format and resized to IMG_SIZE dimension square.
    	The whole data is saved with numpy in .npy format for quick loading for future purpose.

  (c).def get_testing_data():
	Returns the testing data from TEST_DIR.
    	Images are read in grayscale format and resized to IMG_SIZE dimension square.
    	The whole data is saved with numpy in .npy format for quick loading for future purpose.

2.Data prepration for training :
  In this we reshape the image eg.reshape(-1,IMG_SIZE,IMG_SIZE,1)


3.Cnn architecture for this project:
	def get_model(saved=True): his method returns the model used.
    	Returns a saved model if MODEL_NAME is found.
    	CovNet Architecture
    
    	Keyword Arguments:
    	saved - Get the saved model from the MODEL_PATH if exists.(default True)
    
    	Returns:
    	model - The complete uncompiled Keras model.

	model.summary():
		Total params: 1,453,377
		Trainable params: 1,453,377
		Non-trainable params: 0
		i.e 3 blocks with 2layer each , last 4th have 1flattern layer and 3Dense layer last one have sigmoid 				activation function.
4.Training of model :
   By prepared data for 30epochs.

5.Measuring Acuracy by sklearn library.
